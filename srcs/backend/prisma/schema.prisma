generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Friends {
  id        String @id @default(cuid())
  friend    User   @relation("friend_users", fields: [friend_id], references: [userID])
  user_id   String
  user      User   @relation("users", fields: [user_id], references: [userID])
  friend_id String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([user_id, friend_id])
  @@map("blocked")
}

model User {
  userID            String     @id @default(cuid())
  accessToken42     String?
  refreshToken42    String?
  jwtToken          String?
  login42           String     @unique
  username          String     @unique
  userStatus        UserStatus @default(online)
  imagePath         String     @default("/defaultPhoto.png")
  authenticator     Boolean    @default(false)
  authKey           String     @default("none")
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
 userFriends       Friends[]  @relation("users")
 friendUserFriends Friends[]  @relation("friend_users")
 hasfriend          Boolean
}

model FriendRequest {
  friendRequestID String        @id @default(cuid())
  sender          String
  receiver        String
  status          requestStatus @default(pending)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@unique([sender, receiver])
}

model Game {
  gameID           String   @id @default(cuid())
  gameRoomID       String?  @unique
  leftPlayer       String
  leftPlayerScore  Int      @default(0)
  rightPlayer      String
  rightPlayerScore Int      @default(0)
  active           Boolean  @default(true)
  winner           String   @default("Undefined")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Block {
  blockID   String   @id @default(cuid())
  blocker   String
  blocked   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([blocker, blocked])
}

enum UserStatus {
  online
  offline
  playing
}

enum requestStatus {
  pending
  accepted
  declined
}
